version: "3.7"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: 'nginx -g "daemon off;"'
    volumes:
      - static-volume:/home/app/web/api/static
    networks:
      - prod
    ports:
      - 80:80
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./server
      dockerfile: Dockerfile
    command: gunicorn tabletamer.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static-volume:/home/app/web/api/static
    networks:
      - prod
    expose:
      - 8000
    env_file:
      - ./server/.env.production
    depends_on:
      - postgres

  postgres:
    image: postgres:13.2-alpine
    container_name: tabletamer-db
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data
    networks:
      - prod
    environment:
      - POSTGRES_DB=tabletamer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  bar-department:
    container_name: bar-department
    build:
      context: department-server
      target: builder
    networks:
      - prod
    command: gunicorn production:app --bind 0.0.0.0:5001
    expose:
      - 5001

  # brazier-department:
  #   container_name: brazier-department
  #   build:
  #     context: department-server
  #     target: builder
  #   networks:
  #     - prod
  #   command: gunicorn production:app --bind 0.0.0.0:5002
  #   expose:
  #     - 5002

  # kitchen-department:
  #   container_name: kitchen-department
  #   build:
  #     context: department-server
  #     target: builder
  #   networks:
  #     - prod
  #   command: gunicorn production:app --bind 0.0.0.0:5003
  #   expose:
  #     - 5003

volumes:
  postgres-data-prod:
  static-volume:

networks:
  prod:
